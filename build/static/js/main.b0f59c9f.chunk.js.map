{"version":3,"sources":["components/Blog.js","components/Notification.js","services/blogs.js","services/login.js","components/CreateBlogForm.js","components/Togglable.js","App.js","index.js"],"names":["Blog","id","blog","removeBlog","addLike","console","log","useState","showAll","setShow","toggleVisibility","likeAddition","event","preventDefault","blogWithLike","url","title","likes","author","blogDeletion","window","confirm","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","onClick","expanded","expandedBlogForm","makeNotification","message","type","className","token","getAll","axios","get","then","response","data","create","newBlog","a","config","headers","Authorization","post","setToken","newToken","update","updatedBlog","put","remove","delete","request","status","login","userInfo","CreateBlogForm","createBlog","setTitle","setAuthor","setUrl","onSubmit","value","name","onChange","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","useImperativeHandle","buttonLabel","children","displayName","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","notificationMessage","setMessage","notificationType","setNotType","useEffect","blogService","savedLoggedinUser","localStorage","getItem","JSON","parse","loginHandler","loginService","loginUser","setItem","stringify","setTimeout","blogObject","blogFormRef","current","returnedBlog","concat","catch","error","map","useRef","Notification","handleClick","text","clear","sort","b","ident","key","blogListing","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0f59c9f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Blog = ({ id, blog, removeBlog, addLike }) => {\r\n  console.log('blog id' + id)\r\n  const [showAll, setShow] = useState(false)\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  const toggleVisibility = () => {\r\n    if(showAll === true){\r\n      setShow(false)\r\n    }\r\n    else\r\n      setShow(true)\r\n  }\r\n\r\n  const likeAddition = (event) => {\r\n    event.preventDefault()\r\n    const blogWithLike = {\r\n      url: blog.url,\r\n      title: blog.title,\r\n      likes: blog.likes + 1,\r\n      author: blog.author\r\n    }\r\n    addLike(blogWithLike, blog.id)\r\n  }\r\n\r\n  const blogDeletion = (event) => {\r\n    event.preventDefault()\r\n    const result = window.confirm(`Do you want to remove blog: ${blog.title}`)\r\n    if(result){\r\n      removeBlog(blog.id)\r\n    }\r\n  }\r\n\r\n  const expandedBlogForm = () => {\r\n    let expanded = `expanded${id}`\r\n    return(\r\n      <div id={expanded}>\r\n        <p>{blog.title}<button onClick={toggleVisibility} id='hideBtn'>hide</button><br></br>\r\n          {blog.url}<br></br>\r\n          {blog.likes}<button onClick={likeAddition} id='likeBtn'>like</button><br></br>\r\n          {blog.author}</p>\r\n        <button onClick={blogDeletion} id='removeBtn'>remove</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const smallBlogForm = () => (\r\n    <div id='small'>{blog.title}\r\n      <button onClick={toggleVisibility} id='viewBtn'>view</button>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n\r\n    <div id='smallOrExpanded' style={blogStyle}>\r\n      {showAll === false ?\r\n        smallBlogForm() : expandedBlogForm()\r\n      }\r\n\r\n    </div>\r\n  )}\r\n\r\nexport default Blog\r\n","import React from 'react'\r\n\r\nconst makeNotification = ({ message, type }) => {\r\n  if(message === null){\r\n    return null\r\n  }\r\n  if(type === 'error'){\r\n    return(\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  else if(type === 'success'){\r\n    return(\r\n      <div className=\"success\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  else{\r\n    return null\r\n  }\r\n}\r\n\r\n\r\nexport default makeNotification","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newBlog => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newBlog, config)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, updatedBlog) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.put(`${baseUrl}/${id}`, updatedBlog, config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return request.status\r\n\r\n}\r\nexport default { getAll, create, setToken, update, remove }","import axios from 'axios'\r\n\r\nconst url = '/api/login'\r\n\r\nconst login = async userInfo => {\r\n  const response = await axios.post(url, userInfo)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst CreateBlogForm = ({ createBlog }) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const handletitleChange = (event) => {\r\n    setTitle(event.target.value)\r\n  }\r\n  const handleauthorChange = (event) => {\r\n    setAuthor(event.target.value)\r\n  }\r\n  const handleurlChange = (event) => {\r\n    setUrl(event.target.value)\r\n  }\r\n\r\n  const addBlog= (event) => {\r\n    event.preventDefault()\r\n\r\n    createBlog({\r\n      title: title,\r\n      author: author,\r\n      url: url\r\n    })\r\n\r\n    setTitle('')\r\n    setAuthor('')\r\n    setUrl('')\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n      <h2>create new</h2>\r\n      <form onSubmit={addBlog}>\r\n        <div>\r\n        title:\r\n          <input\r\n            id='title'\r\n            type=\"text\"\r\n            value={title}\r\n            name=\"Title\"\r\n            onChange={handletitleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          author:\r\n          <input\r\n            id='author'\r\n            type=\"text\"\r\n            value={author}\r\n            name=\"Author\"\r\n            onChange={handleauthorChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          url:\r\n          <input\r\n            id='url'\r\n            type=\"text\"\r\n            value={url}\r\n            name=\"Url\"\r\n            onChange={handleurlChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" id='createBlogBtn'>create</button>\r\n      </form></div>\r\n\r\n  )\r\n}\r\nCreateBlogForm.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  author: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired }\r\n\r\n\r\nexport default CreateBlogForm","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility} id='revealBtn'>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility} id='hideBtn'>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\nTogglable.displayName = 'Togglable'\r\nexport default Togglable","import React, { useState, useEffect, useRef } from 'react'\r\nimport './index.css'\r\nimport Blog from './components/Blog'\r\nimport Notification from './components/Notification'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport CreateBlogForm from './components/CreateBlogForm'\r\nimport Togglable from './components/Togglable'\r\n\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const [user, setUser] = useState(null)\r\n\r\n  const [notificationMessage,  setMessage] = useState(null)\r\n  const [notificationType, setNotType] = useState('')\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const savedLoggedinUser = window.localStorage.getItem('blogUser')\r\n    if(savedLoggedinUser){\r\n      const user = JSON.parse(savedLoggedinUser)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const loginHandler = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try{\r\n      const loginUser = await loginService.login({ username, password })\r\n      console.log(loginUser)\r\n\r\n      window.localStorage.setItem('blogUser', JSON.stringify(loginUser))\r\n      const savedLoggedinUser = window.localStorage.getItem('blogUser')\r\n      const user = JSON.parse(savedLoggedinUser)\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n\r\n      setNotType('success')\r\n      setMessage('login success')\r\n      setTimeout(() => {\r\n        setNotType('')\r\n        setMessage(null)\r\n      }, 5000)\r\n\r\n    }catch(exception){\r\n      console.log(exception)\r\n      setNotType('error')\r\n      setMessage('wrong username or password')\r\n      setTimeout(() => {\r\n        setNotType('')\r\n        setMessage(null)\r\n      }, 5000)\r\n      console.log(exception)\r\n    }\r\n  }\r\n\r\n  const logoutHandler = () => {\r\n    setUser(null)\r\n    window.localStorage.clear()\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <div>\r\n      <Notification message={notificationMessage} type={notificationType}/>\r\n      <form onSubmit={loginHandler}>\r\n        <div>\r\n          username\r\n          <input\r\n            id='username'\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          password\r\n          <input\r\n            id='password'\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" id='loginBtn'>login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n  const createBlog = (blogObject) => {\r\n    blogFormRef.current.toggleVisibility()\r\n    blogService\r\n      .create(blogObject)\r\n      .then(returnedBlog => {\r\n        setBlogs(blogs.concat(returnedBlog))\r\n        setNotType('success')\r\n        setMessage(`a new blog ${returnedBlog.title} by ${returnedBlog.author} added`)\r\n        setTimeout(() => {\r\n          setNotType('')\r\n          setMessage(null)\r\n        }, 5000)\r\n      })\r\n      .catch(error => {\r\n        setNotType('error')\r\n        setMessage(`error: blog was not added ${error}`)\r\n        setTimeout(() => {\r\n          setNotType('')\r\n          setMessage(null)\r\n        }, 5000)\r\n      })\r\n  }\r\n\r\n  const blogListing = () => {\r\n    blogs.sort(function (a, b) {\r\n      return b.likes - a.likes\r\n    })\r\n    let ident = 0\r\n    return (\r\n      <div>\r\n        {blogs.map(blog =>\r\n          <Blog key={blog.id} id={ident++} blog={blog} removeBlog={removeBlog} addLike={addLike}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n  const removeBlog = async (id) => {\r\n    await blogService\r\n      .remove(id)\r\n      .catch(error => {\r\n        console.log(`something went wrong: ${error}`)\r\n      })\r\n    console.log('updating list')\r\n    await blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )\r\n      .catch(error => {\r\n        console.log(`something went wrong: ${error}`)\r\n      })\r\n  }\r\n\r\n  const addLike = (blogObject, id) => {\r\n    blogService\r\n      .update(id, blogObject)\r\n      .then(returnedBlog => {\r\n        setBlogs(blogs.map(blog => blog.id !== id ? blog : returnedBlog))\r\n      })\r\n      .catch(error => {\r\n        console.log(`something went wrong: ${error}`)\r\n      })\r\n  }\r\n\r\n  const blogFormRef = useRef()\r\n\r\n  const createBlogForm = () => (\r\n    <Togglable buttonLabel='new blog' ref={blogFormRef}>\r\n      <CreateBlogForm createBlog={createBlog} />\r\n    </Togglable>\r\n  )\r\n\r\n  const Button = ({ handleClick, text }) => (\r\n    <button onClick={handleClick}>\r\n      {text}\r\n    </button>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {user === null ? loginForm() :\r\n        <div id='mainDiv'>\r\n          <h2>blogs</h2>\r\n          <Notification message={notificationMessage} type={notificationType}/>\r\n          <p>{user.name} logged in\r\n            <Button handleClick={logoutHandler} text='logout'/>\r\n          </p>\r\n          {createBlogForm()}\r\n          {blogListing()}\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}